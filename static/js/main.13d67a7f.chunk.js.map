{"version":3,"sources":["img/loading.svg","img/search.svg","img/cross.svg","config/history.js","machine/fsm.js","utils/localStorage.js","config/index.js","machine/guards.js","utils/base.js","machine/actions.js","machine/services.js","machine/index.js","context/searchPage.js","components/result/idle.js","components/result/noResult.js","hooks/common/useScrollBottom.js","hooks/common/useDoubleClick.js","components/result/resultRow.js","utils/result.js","components/result/showResult.js","components/common/loadingSpinner.js","components/result/index.js","hooks/common/useClickTouchOutside.js","hooks/useSearchBox.js","components/searchBox/index.js","components/main.js","searchPage.js","serviceWorker.js","index.js"],"names":["module","exports","createBrowserHistory","getRandomArbitrary","min","max","Math","random","searchPage","on","SET_KEYWORD","cond","actions","target","internal","TOGGLE_CLEAR","initial","states","idle","withData","READ_MORE","noData","buffering","after","searching","entry","exit","always","rootState","root","startup","fetchRawData","invoke","id","src","onDone","onError","processData","arrangeRawData","optimizeSearchSpeed","type","menu","CLOSE_MENU","OPEN_MENU","closed","TOGGLE_MENU","opened","error","RETRY","getLocalStorage","key","result","localStorage","getItem","JSON","parse","setLocalStorage","value","encodedValue","stringify","setItem","LOCAL_STORAGE_KEY","INITIAL_DATA","SELECTED_BOOKS_VOLUME_RANGE","SELECTED_BOOKS","DEFAULT_BOOKS_VOLUME_RANGE","SONG_SEARCH_KEY_FIELDS","withSettingInLocalStorage","values","every","isEmpty","isEmptyKeyword","_","keyword","isInvalidKeyword","str","last","test","withKeyword","hasNoResult","skipDebounceSearch","skipDebounce","getVolumeRange","list","targetBook","allVolume","filter","book","map","volume","toInteger","generateBookVolumeRange","initialData","booksWithVolumeFilter","reduce","acc","songs","gaActions","initialGA","ReactGA","initialize","debug","process","setPageview","pageview","window","location","pathname","search","sendDimension","set","ua","navigator","userAgent","k","assignActions","setKeyword","assign","clearKeyword","resetResult","pageNumber","readMore","searchSongList","songList","matchSorter","replace","keys","initializeData","data","availableBooks","booksVolumeRange","allSongList","selectedBooks","selectedBooksVolumeRange","toPairs","range","hasDefaultRange","includes","filterSongList","effectActions","scrollToTop","scrollTo","top","behavior","updateKeywordParam","history","push","restoreSetting","storeSetting","fetchInitialData","Promise","resolve","reject","axios","get","then","response","catch","console","ZhuoZhuSearchMachine","Machine","context","guards","services","SearchPageContext","createContext","useSearchPageContext","useContext","SearchPageProvider","children","useMachine","devTools","state","send","Provider","openMenu","closeMenu","toggleMenu","toggleClear","retry","getSearchPageContext","Idle","className","NoResult","useScrollBottom","handleScrollBottom","bottomThreshold","useEffect","handleScroll","innerHeight","pageYOffset","document","body","offsetHeight","addEventListener","removeEventListener","useDoubleClick","onDoubleClick","ref","useRef","clickTimeout","lastTapTime","current","handleDoubleClick","event","currentTime","Date","getTime","tapLengthOfTime","clearTimeout","preventDefault","setTimeout","ResultRow","React","memo","song","searchArtist","titleRef","title","artist","confirm","open","focus","showConnectToYoutube","artistRef","position","page","Result","useCallback","chunkedResult","slice","LoadingSpinner","isLoading","loadingIcon","alt","matches","useClickTouchOutside","handleClickTouchOutside","handleEvent","e","contains","useSearchBox","inputRef","searchBoxRef","blur","inputText","handleOnChange","handleClearBtnClick","showSearchIcon","handleSearchBtnClick","SearchBox","placeholder","onChange","searchIcon","onClick","crossIcon","SearchPage","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","href","origin","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.13d67a7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.0f51771c.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.fa72ba04.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.4f744e82.svg\";","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()\n","const BUFFER_TIME = 500\n\nconst getRandomArbitrary = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nconst menuState = {\n  menu: {\n    initial: 'closed',\n    on: {\n      CLOSE_MENU: '.closed',\n      OPEN_MENU: '.opened',\n    },\n    states: {\n      closed: {\n        on: {\n          TOGGLE_MENU: 'opened',\n        },\n      },\n      opened: {\n        on: {\n          TOGGLE_MENU: 'closed',\n        },\n      },\n    },\n  },\n}\n\nconst searchPage = {\n  searchPage: {\n    on: {\n      SET_KEYWORD: [\n        {\n          cond: 'isEmptyKeyword',\n          actions: ['setKeyword', 'resetResult'],\n          target: '.idle.idle',\n        },\n        {\n          cond: 'isInvalidKeyword',\n          actions: ['setKeyword'],\n        },\n        {\n          cond: 'skipDebounceSearch',\n          actions: ['setKeyword'],\n          target: '.searching',\n        },\n        {\n          actions: ['setKeyword'],\n          target: '.buffering',\n          internal: false,\n        },\n      ],\n      TOGGLE_CLEAR: [\n        {\n          cond: 'hasNoResult',\n          actions: 'clearKeyword',\n          target: '.idle.idle',\n        },\n        { cond: 'withKeyword', actions: 'clearKeyword' },\n        { actions: 'resetResult', target: '.idle.idle' },\n      ],\n    },\n    initial: 'idle',\n    states: {\n      idle: {\n        initial: 'idle',\n        states: {\n          idle: {},\n          withData: {\n            on: {\n              READ_MORE: { actions: 'readMore' },\n            },\n          },\n          noData: {},\n        },\n      },\n      buffering: {\n        after: {\n          [BUFFER_TIME]: 'searching',\n        },\n      },\n      searching: {\n        entry: ['searchSongList', 'scrollToTop'],\n        exit: ['updateKeywordParam', 'sendDimension', 'setPageview'],\n        always: [\n          {\n            cond: 'hasNoResult',\n            target: 'idle.noData',\n          },\n          { target: 'idle.withData' },\n        ],\n      },\n    },\n  },\n}\n\nconst rootState = {\n  root: {\n    initial: 'startup',\n    states: {\n      startup: {\n        entry: ['initialGA', 'sendDimension', 'setPageview'],\n        always: [\n          {\n            cond: 'withSettingInLocalStorage',\n            target: 'idle',\n            actions: ['restoreSetting', 'filterSongList'],\n          },\n          { target: 'fetchRawData' },\n        ],\n      },\n      fetchRawData: {\n        invoke: {\n          id: 'fetch-initial-data',\n          src: 'fetchInitialData',\n          onDone: {\n            target: 'idle',\n            actions: ['initializeData', 'storeSetting', 'filterSongList'],\n          },\n          onError: 'error',\n        },\n      },\n      /* These three states are dummy aim to demo loading animation. */\n      processData: {\n        after: {\n          [getRandomArbitrary(2000, 4000)]: 'arrangeRawData',\n        },\n      },\n      arrangeRawData: {\n        after: {\n          [getRandomArbitrary(2000, 4000)]: 'optimizeSearchSpeed',\n        },\n      },\n      optimizeSearchSpeed: {\n        after: {\n          [getRandomArbitrary(1000, 3000)]: 'idle',\n        },\n      },\n      /* Dummy states end. */\n      idle: {\n        type: 'parallel',\n        states: {\n          ...menuState,\n          ...searchPage,\n        },\n      },\n      error: {\n        on: {\n          RETRY: 'fetchRawData',\n        },\n      },\n    },\n  },\n}\n\nexport default rootState\n","export const getLocalStorage = (key = '') => {\n  const result = localStorage.getItem(key)\n  return JSON.parse(result)\n}\n\nexport const setLocalStorage = (key, value = '') => {\n  const encodedValue = JSON.stringify(value)\n  localStorage.setItem(key, encodedValue)\n  return encodedValue\n}\n\nexport const removeLocalStorage = (key = '') => {\n  return localStorage.removeItem(key)\n}\n\nexport const clearLocalStorage = () => {\n  localStorage.clear()\n}\n","import { isDevMode } from 'utils/base'\n\nexport const DATA_COUNT_PER_PAGE = 15\n\nexport const GA_ID = 'UA-192564086-1'\n\nexport const INITIAL_DATA_PATH = '/song-search-xstate-local/zhuo-zhu-data.json'\n\nexport const LOCAL_STORAGE_KEY = {\n  INITIAL_DATA: 'initial-data',\n  SELECTED_BOOKS_VOLUME_RANGE: 'selected-books-volume-range',\n  SELECTED_BOOKS: 'selected-books',\n}\n\nexport const DEFAULT_BOOKS_VOLUME_RANGE = {\n  '最新排行(簡譜)': [1, 104],\n}\n\nexport const SONG_FIELDS = {\n  BOOK: 'book',\n  TITLE: 'title',\n  ARTIST: 'artist',\n  VOLUME: 'volume',\n  PAGE: 'page',\n  TOTAL_PAGE: 'totalPage',\n  NOTE: 'note',\n}\n\nexport const SONG_SEARCH_KEY_FIELDS = [\n  SONG_FIELDS.BOOK,\n  SONG_FIELDS.TITLE,\n  SONG_FIELDS.ARTIST,\n  SONG_FIELDS.VOLUME,\n]\n","import { isZhuyin } from 'utils/base'\nimport { last, isEmpty, values } from 'lodash'\nimport { getLocalStorage } from 'utils/localStorage'\nimport { LOCAL_STORAGE_KEY } from 'config/index'\n\nexport default {\n  withSettingInLocalStorage: () =>\n    values(LOCAL_STORAGE_KEY).every(\n      (value) => !isEmpty(getLocalStorage(value))\n    ),\n\n  isEmptyKeyword: (_, { keyword }) => isEmpty(keyword),\n\n  isInvalidKeyword: (_, { keyword }) =>\n    isZhuyin(last(keyword)) || last(keyword) === ' ',\n\n  withKeyword: ({ keyword }) => !isEmpty(keyword),\n\n  hasNoResult: ({ result }) => isEmpty(result),\n\n  skipDebounceSearch: (_, { skipDebounce }) => skipDebounce,\n}\n","export const clearBlanks = (str) => {\n  return str.replace(/[\\r\\n\\s]/g, '')\n}\n\nexport const isZhuyin = (str) => {\n  const zhuyin = /[\\u3105-\\u3129\\u02CA\\u02C7\\u02CB\\u02D9]/\n  return zhuyin.test(str)\n}\n\nexport const showConnectToYoutube = (title, keyword) => {\n  const check = window.confirm(`連結至Youtube搜尋 \"${title}\" `)\n  if (check) {\n    window\n      .open(`https://www.youtube.com/results?search_query=${keyword}`, '_blank')\n      .focus()\n  }\n}\n\nexport const encodeQueryData = (data = {}) =>\n  Object.entries(data)\n    .map(\n      ([key, value]) =>\n        `${encodeURIComponent(key)}=${encodeURIComponent(value)}`\n    )\n    .join('&')\n\nexport const isDevMode = process.env.NODE_ENV === 'development'\n","import { assign } from 'xstate'\nimport { clearBlanks, isDevMode } from 'utils/base'\nimport { setLocalStorage, getLocalStorage } from 'utils/localStorage'\nimport history from 'config/history'\nimport {\n  LOCAL_STORAGE_KEY,\n  DEFAULT_BOOKS_VOLUME_RANGE,\n  SONG_SEARCH_KEY_FIELDS,\n  GA_ID,\n} from 'config/index'\nimport { isEmpty, toInteger, min, max, keys, toPairs } from 'lodash'\nimport matchSorter from 'match-sorter'\n\nconst getVolumeRange = (list, targetBook) => {\n  const allVolume = list\n    .filter(({ book }) => book === targetBook)\n    .map(({ volume }) => toInteger(volume))\n  return [min(allVolume), max(allVolume)]\n}\n\nconst generateBookVolumeRange = (initialData = {}) => {\n  return (initialData?.booksWithVolumeFilter || []).reduce(\n    (acc, book) => ({\n      ...acc,\n      [book]: getVolumeRange(initialData?.songs ?? [], book),\n    }),\n    {}\n  )\n}\n\nconst gaActions = {\n  initialGA: ({ ReactGA }) => {\n    ReactGA.initialize(GA_ID, { debug: isDevMode })\n  },\n  setPageview: ({ ReactGA }) => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  },\n  sendDimension: ({ ReactGA, keyword = '' }) => {\n    ReactGA.set({ ua: navigator.userAgent })\n    ReactGA.set({ k: keyword })\n  },\n}\n\nconst routeActions = {}\n\nconst assignActions = {\n  setKeyword: assign({ keyword: (_, { keyword = '' }) => keyword }),\n  clearKeyword: assign({ keyword: '' }),\n  resetResult: assign({ result: [], pageNumber: 1 }),\n  readMore: assign({ pageNumber: ({ pageNumber }) => pageNumber + 1 }),\n\n  searchSongList: assign({\n    result: ({ songList, keyword }) =>\n      matchSorter(songList, clearBlanks(keyword), {\n        keys: SONG_SEARCH_KEY_FIELDS,\n      }),\n  }),\n\n  initializeData: assign((_, { data: { data: initialData } }) => {\n    const { songs = [], availableBooks = [] } = initialData\n\n    const booksVolumeRange = generateBookVolumeRange(initialData)\n\n    const selectedBooksVolumeRange = toPairs(booksVolumeRange).reduce(\n      (acc, [book, range]) => {\n        const hasDefaultRange = keys(DEFAULT_BOOKS_VOLUME_RANGE).includes(book)\n        return {\n          ...acc,\n          [book]: hasDefaultRange ? DEFAULT_BOOKS_VOLUME_RANGE[book] : range,\n        }\n      },\n      {}\n    )\n\n    return {\n      initialData,\n      allSongList: songs,\n      selectedBooks: availableBooks,\n      availableBooks,\n      booksVolumeRange,\n      selectedBooksVolumeRange,\n    }\n  }),\n\n  filterSongList: assign(\n    ({ allSongList, selectedBooksVolumeRange, selectedBooks }) => {\n      const songList = allSongList.filter(({ book, volume }) => {\n        // Not available\n        if (!selectedBooks.includes(book)) return false\n\n        // Has no volume limitations\n        if (!keys(selectedBooksVolumeRange).includes(book)) return true\n\n        // Has no volume range\n        if (isEmpty(selectedBooksVolumeRange[book])) return true\n\n        const [min, max] = selectedBooksVolumeRange[book]\n        return volume >= min && volume <= max\n      })\n\n      return { songList }\n    }\n  ),\n}\n\nconst effectActions = {\n  scrollToTop: () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' })\n  },\n\n  updateKeywordParam: ({ keyword }) => {\n    history.push({ search: `?k=${keyword}` })\n  },\n\n  restoreSetting: assign(() => {\n    const initialData = getLocalStorage(LOCAL_STORAGE_KEY.INITIAL_DATA)\n    const selectedBooksVolumeRange = getLocalStorage(\n      LOCAL_STORAGE_KEY.SELECTED_BOOKS_VOLUME_RANGE\n    )\n    const selectedBooks = getLocalStorage(LOCAL_STORAGE_KEY.SELECTED_BOOKS)\n    const booksVolumeRange = generateBookVolumeRange(initialData)\n\n    return {\n      initialData,\n      selectedBooksVolumeRange,\n      selectedBooks,\n      booksVolumeRange: booksVolumeRange,\n      allSongList: initialData?.songs ?? [],\n      availableBooks: initialData?.availableBooks ?? [],\n    }\n  }),\n\n  storeSetting: ({ initialData, selectedBooksVolumeRange, selectedBooks }) => {\n    setLocalStorage(LOCAL_STORAGE_KEY.INITIAL_DATA, initialData)\n    setLocalStorage(LOCAL_STORAGE_KEY.SELECTED_BOOKS, selectedBooks)\n    setLocalStorage(\n      LOCAL_STORAGE_KEY.SELECTED_BOOKS_VOLUME_RANGE,\n      selectedBooksVolumeRange\n    )\n  },\n}\n\nexport default {\n  ...effectActions,\n  ...assignActions,\n  ...gaActions,\n  ...routeActions,\n}\n","import axios from 'axios'\n\nexport default {\n  fetchInitialData: () => {\n    return new Promise((resolve, reject) => {\n      axios\n        .get('/zhuo-zhu-data.json')\n        .then((response) => {\n          resolve(response)\n        })\n        .catch((error) => {\n          console.error(error)\n          reject(error)\n        })\n    })\n  },\n}\n","import { Machine } from 'xstate'\nimport states from './fsm'\nimport guards from './guards'\nimport actions from './actions'\nimport services from './services'\n\n/**\n * From static JSON file:\n *   booksWithVolumeFilter - Array\n *   availableBooks - Array\n *   books - Array\n *   songs - Array\n * \n * Custom options\n *   selectedBooksVolumeRange\n *   selectedBooks\n */\nconst initialContext = {\n  ReactGA: null,\n  keyword: '',\n  pageNumber: 1,\n  error: null,\n  \n  // from raw data\n  initialData: {},\n  allSongList: [],\n  availableBooks: [\n    '最新排行(簡譜)',\n    '永難忘懷情歌集(旋律版)(簡譜)',\n    '93流行金曲(簡譜)',\n    '永恆的旋律',\n  ],\n  booksVolumeRange: { '最新排行(簡譜)': [1, 150] },\n\n  // custom options\n  selectedBooksVolumeRange: { '最新排行(簡譜)': [1, 150] },\n  selectedBooks: [\n    '最新排行(簡譜)',\n    '永難忘懷情歌集(旋律版)(簡譜)',\n    '93流行金曲(簡譜)',\n    '永恆的旋律',\n  ],\n  // list after filtered (volume & book)\n  songList: [],\n  // search result\n  result: [],\n}\n\nexport const ZhuoZhuSearchMachine = Machine(\n  {\n    id: 'ZhuoZhuSearch',\n    context: initialContext,\n    type: 'parallel',\n    states,\n  },\n  {\n    actions,\n    guards,\n    services,\n  }\n)\n","import React, { createContext, useContext } from 'react'\nimport { useMachine } from '@xstate/react'\nimport { ZhuoZhuSearchMachine } from 'machine/index'\nimport { isDevMode } from 'utils/base'\nimport ReactGA from 'react-ga'\n\nconst SearchPageContext = createContext()\n\nexport const useSearchPageContext = () => useContext(SearchPageContext)\n\n/* \n  @TODO:\n    1. History: save search history into local storage\n    2. Implement menu for other pages\n*/\nconst SearchPageProvider = ({ children }) => {\n  const [state, send] = useMachine(ZhuoZhuSearchMachine, {\n    devTools: isDevMode,\n    context: { ReactGA },\n  })\n\n  // For Debug\n  if (isDevMode) {\n    console.table(state.value)\n    console.log(state)\n    console.log(state.context)\n  }\n\n  const getSendActions = () => ({\n    openMenu: () => send('OPEN_MENU'),\n    closeMenu: () => send('CLOSE_MENU'),\n    toggleMenu: () => send('TOGGLE_MENU'),\n    setKeyword: (keyword = '', skipDebounce = false) =>\n      send({ type: 'SET_KEYWORD', keyword, skipDebounce }),\n    toggleClear: () => send('TOGGLE_CLEAR'),\n    readMore: () => send('READ_MORE'),\n    retry: () => send('RETRY'),\n  })\n\n  const getSearchPageContext = () => {\n    const { context } = state\n    return {\n      state,\n      send,\n      context,\n      actions: {\n        ...getSendActions(),\n      },\n    }\n  }\n\n  return (\n    <SearchPageContext.Provider value={getSearchPageContext()}>\n      {children}\n    </SearchPageContext.Provider>\n  )\n}\n\nexport default SearchPageProvider\n","import React from 'react'\n\nconst Idle = () => (\n  <div className=\"idle-result\">Please enter something to search.</div>\n)\n\nexport default Idle\n","import React from 'react'\n\nconst NoResult = () => (\n  <div className=\"no-result\">Nothing found.</div>\n)\n\nexport default NoResult\n","import { useEffect } from 'react'\n\nconst useScrollBottom = (handleScrollBottom, bottomThreshold = 40) => {\n  useEffect(() => {\n    const handleScroll = () => {\n      if ((window.innerHeight + window.pageYOffset)\n        >= document.body.offsetHeight - bottomThreshold) {\n        handleScrollBottom()\n      }\n    }\n    window.addEventListener('scroll', handleScroll)\n    return () => {\n      window.removeEventListener('scroll', handleScroll)\n    }\n  })\n}\n\nexport default useScrollBottom\n","import { useRef, useEffect } from 'react'\n\nconst SINGLE_TAP_TIME_OUT = 450\n\nconst useDoubleClick = (onDoubleClick) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    let clickTimeout = null\n    let lastTapTime = 0\n    const target = ref.current\n\n    const handleDoubleClick = (event) => {\n      const currentTime = new Date().getTime()\n      const tapLengthOfTime = currentTime - lastTapTime\n      clearTimeout(clickTimeout)\n\n      if (tapLengthOfTime > 0 && tapLengthOfTime < SINGLE_TAP_TIME_OUT) {\n        onDoubleClick()\n        event.preventDefault()\n      } else {\n        clickTimeout = setTimeout(() => { clearTimeout(clickTimeout) }, SINGLE_TAP_TIME_OUT)\n      }\n      lastTapTime = currentTime\n    }\n\n    target.addEventListener('click', handleDoubleClick)\n    return () => {\n      target.removeEventListener('click', handleDoubleClick)\n    }\n  })\n  return ref\n}\n\nexport default useDoubleClick\n","import React from 'react'\nimport useDoubleClick from 'hooks/common/useDoubleClick'\nimport { showConnectToYoutube } from 'utils/base'\nimport { normalizeSearchResultText } from 'utils/result'\n\nconst ResultRow = React.memo(({ song, searchArtist }) => {\n  const titleRef = useDoubleClick(() => {\n    const { title, artist } = song\n    showConnectToYoutube(title, `${title}+${artist.replace(/[/+]/ig, '+')}`)\n  })\n  const artistRef = useDoubleClick(() => searchArtist(song.artist))\n\n  const { title, artist, position } = normalizeSearchResultText(song)\n  return (\n    <div className=\"row\">\n      <div className=\"row__title\" ref={titleRef}>{title}</div>\n      <div className=\"row__artist\" ref={artistRef}>{artist}</div>\n      <div className=\"row__position\">{position}</div>\n    </div>\n  )\n})\n\nexport default ResultRow\n","import { toInteger } from 'lodash'\n\nexport const normalizeSearchResultText = (data) => {\n  /*\n   * If no artist data                       => Replace artist text with \"-\"\n   * If there are multi artists in one field => Replace \"/\" and \"+\" with \"line break\"\n   *                                           (based on \"white-space: pre-wrap;\")\n   */\n  const artistText =\n    data.artist === '' || data.artist === 'XXX'\n      ? '-'\n      : data.artist.replace(/[/+]/gi, '\\n')\n  const positionText =\n    data.volume === ''\n      ? toInteger(data.page)\n      : `${toInteger(data.volume)}/${toInteger(data.page)}`\n\n  return {\n    artist: artistText,\n    position: positionText,\n    title: data.title,\n  }\n}\n","import React, { useCallback } from 'react'\nimport { DATA_COUNT_PER_PAGE } from 'config/index'\nimport { useSearchPageContext } from 'context/searchPage'\n\nimport useScrollBottom from 'hooks/common/useScrollBottom'\n\nimport ResultRow from './resultRow'\n\nconst Result = () => {\n  const {\n    context: { pageNumber = 1, result = [] },\n    actions: { readMore, setKeyword },\n  } = useSearchPageContext()\n\n  useScrollBottom(readMore)\n\n  const searchArtist = useCallback(\n    (artist) => {\n      setKeyword(artist, true)\n    },\n    [] // eslint-disable-line react-hooks/exhaustive-deps\n  )\n\n  const chunkedResult = result.slice(0, DATA_COUNT_PER_PAGE * pageNumber)\n\n  return (\n    <div>\n      {chunkedResult.map((song) => (\n        <ResultRow\n          key={`${song.title}${song.volume}${song.page}`}\n          song={song}\n          searchArtist={searchArtist}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Result\n","import React from 'react'\nimport loadingIcon from 'img/loading.svg'\n\nconst LoadingSpinner = React.memo(({ isLoading }) => (\n  <div className=\"fetch-more-loading\">\n    <img\n      src={loadingIcon}\n      alt=\"icon\"\n      className={'fetch-more-loading__icon' + (isLoading ? '' : ' hide')}\n    />\n  </div>\n))\n\nexport default LoadingSpinner\n","import React from 'react'\nimport { useSearchPageContext } from 'context/searchPage'\n\nimport Idle from './idle'\nimport NoResult from './noResult'\nimport ShowResult from './showResult'\nimport LoadingSpinner from 'components/common/loadingSpinner'\n\nconst Result = () => {\n  const { state } = useSearchPageContext()\n\n  switch (true) {\n    case state.matches('root.idle.searchPage.idle.idle'):\n      return <Idle />\n    case state.matches('root.idle.searchPage.idle.withData'):\n      return <ShowResult />\n    case state.matches('root.idle.searchPage.idle.noData'):\n      return <NoResult />\n\n    default:\n      return <LoadingSpinner isLoading />\n  }\n}\n\nexport default Result\n","import { useEffect } from 'react'\n\nconst useClickTouchOutside = (ref = null, handleClickTouchOutside) => {\n  useEffect(() => {\n    const handleEvent = e => {\n      if (ref && !ref.current.contains(e.target)) {\n        handleClickTouchOutside()\n      }\n    }\n    document.addEventListener('mousedown', handleEvent)\n    document.addEventListener('touchstart', handleEvent)\n\n    return () => {\n      document.removeEventListener('mousedown', handleEvent)\n      document.removeEventListener('touchstart', handleEvent)\n    }\n  }, [ref, handleClickTouchOutside])\n}\n\nexport default useClickTouchOutside\n","import { useRef } from 'react'\nimport { isEmpty } from 'lodash'\nimport { useSearchPageContext } from 'context/searchPage'\nimport useClickTouchOutside from 'hooks/common/useClickTouchOutside'\n\nconst useSearchBox = () => {\n  const {\n    context: { keyword, result },\n    actions: { setKeyword, toggleClear },\n  } = useSearchPageContext()\n\n  const handleOnChange = (e) => {\n    setKeyword(e.target.value)\n  }\n\n  const inputRef = useRef(null)\n  const searchBoxRef = useRef(null)\n\n  const setInputFocus = () => {\n    inputRef.current.focus()\n  }\n  const setInputBlur = () => {\n    inputRef.current.blur()\n  }\n\n  const handleClearBtnClick = () => {\n    toggleClear()\n  }\n\n  // Blur input whenever user `touchstart outside` instead of `touchend outside`\n  useClickTouchOutside(searchBoxRef, setInputBlur)\n\n  return {\n    inputText: keyword,\n    inputRef,\n    searchBoxRef,\n    handleOnChange,\n    handleClearBtnClick,\n    showSearchIcon: isEmpty(result) && isEmpty(keyword),\n    handleSearchBtnClick: setInputFocus,\n  }\n}\n\nexport default useSearchBox\n","import React from 'react'\nimport useSearchBox from 'hooks/useSearchBox'\n\nimport searchIcon from 'img/search.svg'\nimport crossIcon from 'img/cross.svg'\n\nconst SearchBox = () => {\n  const {\n    inputText,\n    inputRef,\n    searchBoxRef,\n    handleOnChange,\n    handleClearBtnClick,\n    showSearchIcon,\n    handleSearchBtnClick,\n  } = useSearchBox()\n\n  return (\n    <div className=\"search-box\" ref={searchBoxRef}>\n      <input\n        className=\"search-box__input\"\n        type=\"text\"\n        placeholder=\"Title / Artist / Volume\"\n        value={inputText}\n        ref={inputRef}\n        onChange={handleOnChange}\n      />\n      {showSearchIcon ? (\n        <img\n          src={searchIcon}\n          alt=\"icon\"\n          className=\"search-box__icon search-box__icon--search\"\n          onClick={handleSearchBtnClick}\n        />\n      ) : (\n        <img\n          src={crossIcon}\n          alt=\"icon\"\n          className=\"search-box__icon search-box__icon--cross\"\n          onClick={handleClearBtnClick}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport Result from 'components/result/index'\nimport SearchBox from 'components/searchBox/index'\n\nexport default () => (\n  <div className=\"main\">\n    <div className=\"search-page-placeholder\" />\n    <SearchBox />\n    <Result />\n  </div>\n)\n","import React from 'react'\nimport Main from 'components/main'\nimport SearchPageProvider from './context/searchPage'\n\nconst SearchPage = () => (\n  <SearchPageProvider>\n    <Main />\n  </SearchPageProvider>\n)\n\nexport default SearchPage\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport history from 'config/history'\nimport SearchPage from './searchPage'\nimport { Router } from 'react-router-dom'\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <SearchPage />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}