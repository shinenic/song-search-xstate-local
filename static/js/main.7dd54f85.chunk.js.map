{"version":3,"sources":["img/loading.svg","img/search.svg","img/cross.svg","machine/fsm.js","utils/base.js","machine/guards.js","machine/actions.js","machine/index.js","machine/services.js","context/searchPage.js","components/result/idle.js","components/result/noResult.js","components/result/error.js","hooks/common/useDoubleClick.js","components/result/resultRow.js","utils/result.js","hooks/common/useSmoothLoading.js","components/result/loading/fetchMoreLoading.js","components/result/loading/searchKeywordLoading.js","hooks/common/useScrollBottom.js","components/result/showResult.js","components/result/index.js","hooks/common/useClickTouchOutside.js","hooks/useSearchBox.js","components/searchBox/index.js","components/main.js","searchPage.js","serviceWorker.js","index.js"],"names":["module","exports","searchPage","on","SET_KEYWORD","target","internal","actions","TOGGLE_CLEAN","cond","initial","states","idle","HANDLE_SEARCH_RESULT","withData","READ_MORE","noData","error","buffering","after","searching","always","rootState","root","startup","fetchRawData","invoke","id","src","onDone","onError","type","menu","CLOSE_MENU","OPEN_MENU","closed","TOGGLE_MENU","opened","RETRY","removeAllWhiteSpaces","str","replace","isZhuyin","test","isEmptyString","isString","isEmpty","isEmptyArray","arr","isArray","shouldSkipDebounce","_","e","skipDebounce","withInput","ctx","input","withResultOnly","result","invalidParams","last","trim","isNoResult","get","cancel","setActions","setInput","assign","cleanInput","cleanResult","setResult","pagination","setLoading","loading","setLoaded","setNoError","setError","data","setKeyword","variables","keyword","page","setPage","debounceSearchActions","sendSearchEventAfterDelay","send","delay","cancelSearch","ZhuoZhuSearchMachine","Machine","context","guards","services","fetchResult","SearchPageContext","createContext","useSearchPageContext","useContext","SearchPageProvider","children","useMachine","state","Provider","value","searchKeywordLoading","fetchMoreLoading","sendChangeInput","sendToggleClean","sendFetchMore","sendRetry","retry","getSearchPageContext","Idle","className","NoResult","onClick","useDoubleClick","onDoubleClick","ref","useRef","useEffect","clickTimeout","lastTapTime","current","handleDoubleClick","event","currentTime","Date","getTime","tapLengthOfTime","clearTimeout","preventDefault","setTimeout","addEventListener","removeEventListener","ResultRow","React","memo","song","searchArtist","titleRef","title","artist","window","confirm","open","focus","showConnectToYoutube","artistRef","position","volume","Number","useSmoothLoading","isLoading","useState","showLoading","setShowLoading","cancelLoading","debounce","a","FetchMoreLoading","loadingIcon","alt","SearchKeywordLoading","useScrollBottom","handleScrollBottom","bottomThreshold","handleScroll","innerHeight","pageYOffset","document","body","offsetHeight","Result","useCallback","currentPage","totalPages","showSearchKeywordLoading","map","key","resultState","useClickTouchOutside","handleClickTouchOutside","handleEvent","contains","useSearchBox","inputRef","searchBoxRef","blur","inputText","handleOnChange","isSmooth","scrollTo","top","behavior","scrollToTop","handleClearBtnClick","showSearchIcon","handleSearchBtnClick","SearchBox","placeholder","onChange","searchIcon","crossIcon","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","href","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7dd54f85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.0f51771c.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.fa72ba04.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.4f744e82.svg\";","const BUFFER_TIME = 1000\n\nconst menuState = {\n  menu: {\n    initial: 'closed',\n    on: {\n      CLOSE_MENU: 'closed',\n      OPEN_MENU: 'open',\n    },\n    states: {\n      closed: {\n        on: {\n          TOGGLE_MENU: 'opened',\n        },\n      },\n      opened: {\n        on: {\n          TOGGLE_MENU: 'closed',\n        },\n      },\n    },\n  },\n}\n\nconst searchPage = {\n  searchPage: {\n    on: {\n      SET_KEYWORD: {\n        target: '.searchBuffer.buffering',\n        internal: false,\n        actions: ['setKeyword'],\n      },\n      TOGGLE_CLEAN: [\n        { cond: 'withInput', actions: 'cleanInput' },\n        { actions: 'cleanResult', target: 'searchResult.idle' },\n      ],\n    },\n    initial: 'idle',\n    states: {\n      idle: {\n        initial: 'idle',\n        on: {\n          HANDLE_SEARCH_RESULT: [\n            { cond: 'withError', target: 'error' },\n            { cond: 'withoutData', target: 'noData' },\n            { target: 'withData' },\n          ],\n        },\n        states: {\n          idle: {},\n          withData: {\n            on: {\n              READ_MORE: { actions: 'readMore' },\n            },\n          },\n          noData: {},\n          error: {},\n        },\n      },\n      buffering: {\n        after: {\n          [BUFFER_TIME]: 'searching',\n        },\n      },\n      searching: {\n        always: {\n          target: 'idle',\n          actions: ['searchResult', 'sandHandleSearchResult'],\n        },\n      },\n    },\n  },\n}\n\nconst rootState = {\n  root: {\n    initial: 'startup',\n    states: {\n      startup: {\n        always: [\n          {\n            cond: 'haveRawDataInLocalStorage',\n            target: 'idle',\n            actions: ['restoreRawData', 'filterData'],\n          },\n          { target: 'fetchRawData' },\n        ],\n      },\n      fetchRawData: {\n        invoke: {\n          id: 'fetch-initial-data',\n          src: 'fetchRawData',\n          onDone: { target: 'idle', actions: ['storeRawData', 'filterData'] },\n          onError: 'error',\n        },\n      },\n      idle: {\n        type: 'parallel',\n        states: {\n          ...menuState,\n          ...searchPage,\n        },\n      },\n      error: {\n        on: {\n          RETRY: 'fetchRawData',\n        },\n      },\n    },\n  },\n}\n\nexport default rootState\n","import { isArray, isEmpty, isString, last, toPairs } from 'lodash'\n\nexport const removeAllWhiteSpaces = str => {\n  return str.replace(/[\\r\\n\\s]/g, '')\n}\n\nexport const isZhuyin = str => {\n  const zhuyin = /[\\u3105-\\u3129\\u02CA\\u02C7\\u02CB\\u02D9]/\n  return zhuyin.test(str)\n}\n\nexport const isValidKeywordQueryString = str => {\n  const strWithoutWhiteSpace = removeAllWhiteSpaces(str)\n  if (isEmpty(strWithoutWhiteSpace))\n    return false\n  if (isZhuyin(last(strWithoutWhiteSpace)))\n    return false\n  return true\n}\n\nexport const showConnectToYoutube = (title, keyword) => {\n  const check = window.confirm(`連結至Youtube搜尋 \"${title}\" `)\n  if (check) {\n    window.open(`https://www.youtube.com/results?search_query=${keyword}`, '_blank').focus()\n  }\n}\n\nexport const isUrlSearchParamTrue = param => {\n  const urlParams = new URLSearchParams(window.location.search)\n  if (!urlParams.has(param)) return false\n  const value = urlParams.get(param).toUpperCase()\n  return isEmptyString(value) || value === 'TRUE'\n}\n\nexport const getParamsValue = params => {\n  const urlParams = new URLSearchParams(window.location.search)\n  return params.reduce((acc, param) => (\n    { ...acc, [param]: urlParams.get(param) }\n  ), {})\n}\n\nexport const scrollToTop = (isSmooth = false) => {\n  window.scrollTo({ top: 0, behavior: isSmooth ? 'smooth' : 'auto' })\n}\n\nexport const encodeQueryData = (data = {}) => (\n  toPairs(data).map(pair => (\n    `${encodeURIComponent(pair[0])}=${encodeURIComponent(pair[1])}`\n  )).join('&')\n)\n\nexport const isEmptyString = str => isString(str) && isEmpty(str)\n\nexport const isEmptyArray = arr => isArray(arr) && isEmpty(arr)\n","import { isZhuyin, isEmptyString, isEmptyArray } from 'utils/base'\nimport { get, last } from 'lodash'\n\nexport default {\n  shouldSkipDebounce: (_, e) => e.skipDebounce || false,\n  withInput: ctx => !isEmptyString(ctx.input),\n  withResultOnly: (ctx, e) => !isEmptyArray(ctx.result) && (isEmptyString(ctx.input) || isEmptyString(e.input)),\n  invalidParams: ctx => isEmptyString(ctx.input) || isZhuyin(last(ctx.input.trim())),\n  isNoResult: (_, e) => isEmptyArray(get(e, ['data', 'songs', 'result'], [])) // `Null` won't be replaced into defaulValue(third argument)\n    || !get(e, ['data', 'songs', 'result'])\n}","import { send, assign, actions } from 'xstate'\nimport { removeAllWhiteSpaces } from 'utils/base'\nimport { get } from 'lodash'\nconst { cancel } = actions\n\nconst SEARCH_DEBOUNCE_TIME = 100\n\nconst setActions = {\n  setInput: assign({ input: (_, e) => e.input || '' }),\n  cleanInput: assign({ input: '' }),\n  cleanResult: assign({ result: [] }),\n  setResult: assign({\n    result: (ctx, e) => {\n      if (get(e, ['data', 'songs', 'pagination', 'currentPage'], 1) > 1) {\n        return [...ctx.result, ...get(e, ['data', 'songs', 'result'], [])]\n      }\n      return get(e, ['data', 'songs', 'result'], [])\n    },\n    pagination: (_, e) => get(e, ['data', 'songs', 'pagination'], {}),\n  }),\n  setLoading: assign({ loading: true }),\n  setLoaded: assign({ loading: false }),\n  setNoError: assign({ error: null }),\n  setError: assign({ error: (_, e) => e.data || true }),\n  setKeyword: assign({\n    variables: (_, e) => ({\n      keyword: removeAllWhiteSpaces(e.input || ''),\n      page: 1\n    })\n  }),\n  setPage: assign({\n    variables: (ctx, e) => ({\n      ...ctx.variables,\n      page: e.page || 1\n    })\n  })\n}\n\nconst debounceSearchActions = {\n  sendSearchEventAfterDelay: send('VERIFY_PARAMS', {\n    delay: SEARCH_DEBOUNCE_TIME,\n    id: 'debounced-search'\n  }),\n  cancelSearch: cancel('debounced-search'),\n}\n\nexport default {\n  ...setActions,\n  ...debounceSearchActions\n}","import { Machine } from 'xstate'\nimport states from './fsm'\nimport guards from './guards'\nimport actions from './actions'\nimport services from './services'\n\nconst initialContext = {\n  input: '',\n  result: [],\n  pagination: {},\n  loading: false,\n  error: null,\n  variables: {\n    keyword: '',\n    page: 1\n  }\n}\n\nexport const ZhuoZhuSearchMachine = Machine({\n  id: 'ZhuoZhuSearch',\n  context: initialContext,\n  type: 'parallel',\n  states\n}, {\n  actions,\n  guards,\n  services\n})\n","export default {\n  fetchResult: (ctx, e) => {},\n}\n","import React, { createContext, useContext } from 'react'\nimport { get } from 'lodash'\nimport { useMachine } from '@xstate/react';\nimport { ZhuoZhuSearchMachine } from 'machine/index'\n\nconst SearchPageContext = createContext()\n\nexport const useSearchPageContext = () => useContext(SearchPageContext)\n\n/* \n  TODOS:\n    1. Incognito & History: record and send history to server and localstore when Incognito mode off\n    2. Implement menu for other pages\n*/\nconst SearchPageProvider = ({ children }) => {\n  const [state, send] = useMachine(ZhuoZhuSearchMachine)\n\n  // For Debug\n  // console.table(state.value)\n  // console.log(state.context)\n\n  const getSendActions = () => ({\n    sendChangeInput: (input, skipDebounce = false) => send({ type: 'CHANGE_INPUT', input, skipDebounce }),\n    sendToggleClean: () => send('TOGGLE_CLEAN'),\n    sendFetchMore: page => send({ type: 'FETCH_MORE', page }),\n    sendRetry: () => send({ type: 'RETRY', retry: true }),\n  })\n\n  const getSearchPageContext = () => {\n    const { context } = state\n    return {\n      state,\n      send,\n      context,\n      searchKeywordLoading: context.loading && get(context, ['variables', 'page'], 1) === 1,\n      fetchMoreLoading: context.loading && get(context, ['variables', 'page'], 1) !== 1,\n      ...getSendActions()\n    }\n  }\n\n  return (\n    <SearchPageContext.Provider value={getSearchPageContext()}>\n      {children}\n    </SearchPageContext.Provider>\n  )\n}\n\nexport default SearchPageProvider\n","import React from 'react'\n\nconst Idle = () => (\n  <div className=\"idle-result\">Please enter something to search.</div>\n)\n\nexport default Idle\n","import React from 'react'\n\nconst NoResult = () => (\n  <div className=\"no-result\">Nothing found.</div>\n)\n\nexport default NoResult\n","import React from 'react'\nimport { useSearchPageContext } from 'context/searchPage'\n\nconst Idle = () => {\n  const { sendRetry } = useSearchPageContext()\n\n  return (\n    <div className=\"error-result\">\n      An error occurred, please&nbsp;\n        <span className=\"error-result__retry\" onClick={sendRetry}>\n        try again\n        </span>\n      .\n    </div>\n  )\n}\n\nexport default Idle\n","import { useRef, useEffect } from 'react'\n\nconst SINGLE_TAP_TIME_OUT = 450\n\nconst useDoubleClick = (onDoubleClick) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    let clickTimeout = null\n    let lastTapTime = 0\n    const target = ref.current\n\n    const handleDoubleClick = (event) => {\n      const currentTime = new Date().getTime()\n      const tapLengthOfTime = currentTime - lastTapTime\n      clearTimeout(clickTimeout)\n\n      if (tapLengthOfTime > 0 && tapLengthOfTime < SINGLE_TAP_TIME_OUT) {\n        onDoubleClick()\n        event.preventDefault()\n      } else {\n        clickTimeout = setTimeout(() => { clearTimeout(clickTimeout) }, SINGLE_TAP_TIME_OUT)\n      }\n      lastTapTime = currentTime\n    }\n\n    target.addEventListener('click', handleDoubleClick)\n    return () => {\n      target.removeEventListener('click', handleDoubleClick)\n    }\n  })\n  return ref\n}\n\nexport default useDoubleClick\n","import React from 'react'\nimport useDoubleClick from 'hooks/common/useDoubleClick'\nimport { showConnectToYoutube } from 'utils/base'\nimport { normalizeSearchResultText } from 'utils/result'\n\nconst ResultRow = React.memo(({ song, searchArtist }) => {\n  const titleRef = useDoubleClick(() => {\n    const { title, artist } = song\n    showConnectToYoutube(title, `${title}+${artist.replace(/[/+]/ig, '+')}`)\n  })\n  const artistRef = useDoubleClick(() => searchArtist(song.artist))\n\n  const { title, artist, position } = normalizeSearchResultText(song)\n  return (\n    <div className=\"row\">\n      <div className=\"row__title\" ref={titleRef}>{title}</div>\n      <div className=\"row__artist\" ref={artistRef}>{artist}</div>\n      <div className=\"row__position\">{position}</div>\n    </div>\n  )\n})\n\nexport default ResultRow\n","export const normalizeSearchResultText = data => {\n  /*\n   * If no artist data                       => Replace artist text with \"-\"\n   * If there are multi artists in one field => Replace \"/\" and \"+\" with \"line break\"\n   *                                           (based on \"white-space: pre-wrap;\") \n   */\n  const artistText = (data.artist === '' || data.artist === 'XXX')\n    ? '-'\n    : data.artist.replace(/[/+]/ig, '\\n')\n  const positionText = data.volume === ''\n    ? Number(data.page)\n    : `${Number(data.volume)}/${Number(data.page)}`\n\n  return {\n    artist: artistText,\n    position: positionText,\n    title: data.title\n  }\n}","import { useState, useRef, useEffect } from 'react'\nimport { debounce } from 'lodash'\n\nconst SMOOTH_LOADING_TIME = 1500 // millisecond\n\nconst useSmoothLoading = (isLoading) => {\n  const [showLoading, setShowLoading] = useState(isLoading)\n\n  const cancelLoading = useRef(debounce(async () => {\n    setShowLoading(false)\n  }, SMOOTH_LOADING_TIME))\n\n\n  useEffect(() => {\n    const handleLoading = () => {\n      isLoading ? setShowLoading(true) : cancelLoading.current()\n    }\n\n    handleLoading()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLoading])\n\n  return { showLoading, setShowLoading }\n}\n\nexport default useSmoothLoading","import React from 'react'\nimport loadingIcon from 'img/loading.svg'\n\nconst FetchMoreLoading = React.memo(({ isLoading }) => (\n  <div className=\"fetch-more-loading\">\n    <img\n      src={loadingIcon}\n      alt=\"icon\"\n      className={'fetch-more-loading__icon' + (isLoading ? '' : ' hide')}\n    />\n  </div>\n))\n\nexport default FetchMoreLoading\n","import React from 'react'\n\nconst SearchKeywordLoading = React.memo(({ isLoading }) => (\n  <div className=\"loading-container\">\n    <div className={isLoading ? 'loading-bar' : ''} />\n  </div>\n))\n\nexport default SearchKeywordLoading\n","import { useEffect } from 'react'\n\nconst useScrollBottom = (handleScrollBottom, bottomThreshold = 40) => {\n  useEffect(() => {\n    const handleScroll = () => {\n      if ((window.innerHeight + window.pageYOffset)\n        >= document.body.offsetHeight - bottomThreshold) {\n        handleScrollBottom()\n      }\n    }\n    window.addEventListener('scroll', handleScroll)\n    return () => {\n      window.removeEventListener('scroll', handleScroll)\n    }\n  })\n}\n\nexport default useScrollBottom\n","import React, { useCallback } from 'react'\nimport { useSearchPageContext } from 'context/searchPage'\nimport ResultRow from './resultRow'\nimport useSmoothLoading from 'hooks/common/useSmoothLoading'\nimport FetchMoreLoading from './loading/fetchMoreLoading'\nimport SearchKeywordLoading from './loading/searchKeywordLoading'\nimport useScrollBottom from 'hooks/common/useScrollBottom'\n\nconst Result = () => {\n  const {\n    context,\n    searchKeywordLoading,\n    fetchMoreLoading,\n    sendFetchMore,\n    sendChangeInput\n  } = useSearchPageContext()\n\n  const searchArtist = useCallback(\n    (artist) => { sendChangeInput(artist, true) },\n    [] // eslint-disable-line react-hooks/exhaustive-deps\n  )\n\n  useScrollBottom(() => {\n    const { pagination: { currentPage, totalPages } } = context\n    if (currentPage < totalPages) {\n      sendFetchMore(currentPage + 1)\n    }\n  })\n\n  const { showLoading: showSearchKeywordLoading } = useSmoothLoading(searchKeywordLoading)\n\n  return (\n    <div>\n      <SearchKeywordLoading isLoading={showSearchKeywordLoading} />\n      {context.result.map(song => (\n        <ResultRow\n          key={`${song.title}${song.volume}${song.page}`}\n          song={song}\n          searchArtist={searchArtist}\n        />\n      ))}\n      <FetchMoreLoading isLoading={fetchMoreLoading} />\n    </div>\n  )\n}\n\nexport default Result\n","import React from 'react'\nimport { useSearchPageContext } from 'context/searchPage'\nimport Idle from './idle'\nimport NoResult from './noResult'\nimport Error from './error'\nimport ShowResult from './showResult'\n\nconst Result = () => {\n  const { state } = useSearchPageContext()\n  const { value: { result: resultState } } = state\n\n  if (resultState === 'idle') return <Idle />\n\n  if (resultState === 'errorResult') return <Error />\n\n  if (resultState === 'noResult') return <NoResult />\n\n  return <ShowResult />\n}\n\nexport default Result\n","import { useEffect } from 'react'\n\nconst useClickTouchOutside = (ref = null, handleClickTouchOutside) => {\n  useEffect(() => {\n    const handleEvent = e => {\n      if (ref && !ref.current.contains(e.target)) {\n        handleClickTouchOutside()\n      }\n    }\n    document.addEventListener('mousedown', handleEvent)\n    document.addEventListener('touchstart', handleEvent)\n\n    return () => {\n      document.removeEventListener('mousedown', handleEvent)\n      document.removeEventListener('touchstart', handleEvent)\n    }\n  }, [ref, handleClickTouchOutside])\n}\n\nexport default useClickTouchOutside\n","import { useRef } from 'react'\nimport {\n  isEmptyArray,\n  isEmptyString,\n  scrollToTop\n} from 'utils/base'\nimport { useSearchPageContext } from 'context/searchPage'\nimport useClickTouchOutside from 'hooks/common/useClickTouchOutside'\n\nconst useSearchBox = () => {\n  const {\n    context,\n    sendChangeInput,\n    sendToggleClean\n  } = useSearchPageContext()\n\n  const handleOnChange = e => {\n    sendChangeInput(e.target.value)\n    scrollToTop()\n  }\n\n  const inputRef = useRef(null)\n  const searchBoxRef = useRef(null)\n\n  const setInputFocus = () => { inputRef.current.focus() }\n  const setInputBlur = () => { inputRef.current.blur() }\n\n  const handleClearBtnClick = () => { sendToggleClean() }\n\n  useClickTouchOutside(searchBoxRef, setInputBlur)\n\n  return {\n    inputText: context.input,\n    inputRef,\n    searchBoxRef,\n    handleOnChange,\n    handleClearBtnClick,\n    showSearchIcon: isEmptyArray(context.result) && isEmptyString(context.input),\n    handleSearchBtnClick: setInputFocus\n  }\n}\n\nexport default useSearchBox\n","import React from 'react'\nimport useSearchBox from 'hooks/useSearchBox'\nimport searchIcon from 'img/search.svg'\nimport crossIcon from 'img/cross.svg'\n\nconst SearchBox = () => {\n  const {\n    inputText,\n    inputRef,\n    searchBoxRef,\n    handleOnChange,\n    handleClearBtnClick,\n    showSearchIcon,\n    handleSearchBtnClick\n  } = useSearchBox()\n\n  return (\n    <div className=\"search-box\" ref={searchBoxRef}>\n      <input\n        className=\"search-box__input\"\n        type=\"text\"\n        placeholder=\"Title / Artist / Volume\"\n        value={inputText}\n        ref={inputRef}\n        onChange={handleOnChange}\n      />\n      {\n        showSearchIcon\n          ? <img\n            src={searchIcon}\n            alt=\"icon\"\n            className=\"search-box__icon search-box__icon--search\"\n            onClick={handleSearchBtnClick}\n          />\n          : <img\n            src={crossIcon}\n            alt=\"icon\"\n            className=\"search-box__icon search-box__icon--cross\"\n            onClick={handleClearBtnClick}\n          />\n      }\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport Result from 'components/result/index'\nimport SearchBox from 'components/searchBox/index'\n\nexport default () => (\n  <div className=\"main\">\n    <div className=\"search-page-placeholder\" />\n    <SearchBox />\n    <Result />\n  </div>\n)\n","import React from \"react\";\nimport Main from \"components/main\";\nimport SearchPageProvider from \"./context/searchPage\";\n\nexport default () => (\n  <SearchPageProvider>\n    <Main />\n  </SearchPageProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport SearchPage from './searchPage'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<SearchPage />, document.getElementById('root'))\n\nserviceWorker.register()\n"],"sourceRoot":""}